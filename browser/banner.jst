/**
 * Concurrent
 * @author Phips Peter <pspeter333@gmail.com>
 *
 * UMD Module loader from https://github.com/umdjs/umd/blob/master/returnExports.js
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(factory);
  } else if (typeof exports === 'object') {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like enviroments that support module.exports,
    // like Node.
    module.exports = factory();
  } else {
    // Browser globals (root is window)
    root.concurrent = factory();
  }
}(this, function() {
/**
 * Executes a function asynchronously. Prefers setImmediate but will fallback to
 * setTimeout for older browers.
 *
 * @type {Function}
 * @private
 */
var next = typeof setImmediate === 'function' ? setImmediate : function(fn) {
  setTimeout(fn, 0);
};

/**
 * Proxy for node's util class taken from the node source code.
 * https://github.com/joyent/node/blob/master/lib/util.js
 * 
 * @type {Object}
 */
var util = {
  isArray: function(ar) {
    return Array.isArray(ar);
  },
  inherits: function(ctor, superCtor) {
    ctor.super_ = superCtor;
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  }
};

